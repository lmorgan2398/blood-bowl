(()=>{"use strict";var e={d:(t,n)=>{for(var a in n)e.o(n,a)&&!e.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:n[a]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{addTeam:()=>r,assignRanks:()=>g,createTeam:()=>c,getTeamByID:()=>m,getTeamByTicker:()=>i,getTeams:()=>o,rehydrateTeams:()=>l,removeTeamByID:()=>p,setTeamByID:()=>u,setTeams:()=>d});var n={};e.r(n),e.d(n,{addBonus:()=>w,applyBonuses:()=>k,createBonus:()=>b,getBonuses:()=>v,removeBonusByID:()=>S,setBonuses:()=>C});var a={};e.r(a),e.d(a,{addMatch:()=>P,createMatch:()=>B,getMatchByID:()=>D,getMatches:()=>T,reapplyBonusesToAllMatches:()=>x,removeMatchByID:()=>q,setMatchByID:()=>L,setMatches:()=>I,updateRecords:()=>M});let s=[];const o=()=>s,d=e=>s=e,c=(e,t,n,a,s=crypto.randomUUID())=>({name:e,race:t,coach:n,ticker:a,wins:0,draws:0,losses:0,leaguePoints:0,rank:1,totalTDs:0,totalCasualties:0,gamesPlayed:0,get record(){return`${this.wins}-${this.draws}-${this.losses}`},id:s}),l=e=>e.map((e=>{const t=c(e.name,e.race,e.coach,e.ticker);return t.id=e.id,t.wins=e.wins,t.draws=e.draws,t.losses=e.losses,t.leaguePoints=e.leaguePoints,t.rank=e.rank??null,t})),r=e=>s.push(e),i=e=>s.find((t=>t.ticker===e)),m=e=>s.find((t=>t.id===e)),u=(e,t)=>{const n=s.findIndex((t=>t.id===e));-1!==n?s[n]=t:console.warn(`setTeamByID: No team found with id ${e}`)},p=e=>{s.forEach(((t,n)=>{e===t.id&&s.splice(n,1)}))},g=()=>{let e=Array.from(s);for(let t=0;t<e.length;t++){let n=e[t].leaguePoints,a=t;for(let s=t+1;s<e.length;s++)e[s].leaguePoints>n&&(n=e[s].leaguePoints,a=s);let s=e[a];e[a]=e[t],e[t]=s}e.forEach(((e,t)=>{e.rank=t+1})),d(e)},h=(e,t)=>{localStorage.setItem(e,JSON.stringify(t))},y=e=>{const t=localStorage.getItem(e);return t?JSON.parse(t):null},f=(e,t,n)=>{h("teams",e.getTeams()),h("matches",t.getMatches()),h("bonuses",n.getBonuses())};let E=[];const v=()=>E,C=e=>E=e,b=(e,t,n,a,s)=>({name:e,type:t,description:n,count:a,points:s,id:crypto.randomUUID()}),w=e=>E.push(e),S=e=>{E.forEach(((t,n)=>{e===t.id&&E.splice(n,1)}))},k=(e,t,n,a,s,o)=>{let d=0,c=[];return E.forEach((l=>{if(!1===l.active)return;const r="opponent TDs"==l.type&&t<=l.count&&"win"==e||"casualties"==l.type&&n>=l.count||"passes"==l.type&&a>=l.count,i="painted"==l.type&&s||"underdog"==l.type&&o;r?(d+=l.points,c.push(`${l.name}: +${l.points} points for ${l.count} ${l.type}`)):i&&(d+=l.points,c.push(`${l.name}: +${l.points} points`))})),{points:d,appliedBonuses:c}};let $=[];const T=()=>$,I=e=>$=e,B=(e,t,n,a,s,o,d,c,l,r,i,m,u,p=null)=>{let g=p||crypto.randomUUID(),h="draw",y="draw",f=0,E=0;n>a?(h="win",f+=3,y="loss",E+=1):n<a?(h="loss",f+=1,y="win",E+=3):(f+=2,E+=2);let v=k(h,a,d,s,l,i),C=k(y,n,c,o,r,m),b=v.points,w=E+C.points;return{date:u,id:g,teams:[{id:e,tds:n,painted:l,underdog:i,casualties:d,passes:s,result:h,basePoints:f,leaguePoints:f+b,bonusesApplied:v.appliedBonuses,isHome:!0},{id:t,tds:a,painted:r,underdog:m,casualties:c,passes:o,result:y,basePoints:E,leaguePoints:w,bonusesApplied:C.appliedBonuses,isHome:!1}]}},P=e=>$.push(e),q=e=>{$.forEach(((t,n)=>{e===t.id&&$.splice(n,1)}))},L=(e,t)=>{const n=$.findIndex((t=>t.id===e));-1!==n?$[n]=t:console.warn(`setMatchByID: No match found with id ${e}`)},D=e=>$.find((t=>t.id===e)),M=e=>{const t=T();e.forEach((e=>{e.wins=0,e.draws=0,e.losses=0,e.leaguePoints=0,e.totalTDs=0,e.totalCasualties=0,e.gamesPlayed=0})),t.forEach((t=>{t.teams.forEach((t=>{const n=e.find((e=>e.id===t.id));n&&(n.leaguePoints+=Number(t.leaguePoints),n.totalTDs+=Number(t.tds),n.totalCasualties+=Number(t.casualties),n.gamesPlayed+=1,"win"===t.result?n.wins+=1:"draw"===t.result?n.draws+=1:"loss"===t.result&&(n.losses+=1))}))}))},x=()=>{T().forEach((e=>{const[t,n]=e.teams,a=B(t.id,n.id,t.tds,n.tds,t.passes,n.passes,t.casualties,n.casualties,t.painted,n.painted,t.underdog,n.underdog,e.date);a.id=e.id,L(e.id,a)}))};let A=document.querySelector("#teams tbody");const N=e=>{for(;A.firstChild;)A.removeChild(A.firstChild);e.forEach((e=>{let t=document.createElement("tr");A.appendChild(t),t.dataset.teamId=e.id;let n=document.createElement("td");t.appendChild(n),n.textContent=e.rank;let a=document.createElement("td");t.appendChild(a),a.textContent=e.name;let s=document.createElement("td");t.appendChild(s),s.textContent=e.record;let o=document.createElement("td");t.appendChild(o),o.textContent=e.leaguePoints}))};let H=document.querySelector("#matches tbody");const U=e=>{for(;H.firstChild;)H.removeChild(H.firstChild);for(let t=e.length-1;t>=0;t--){const n=e[t],a=document.createElement("tr");H.appendChild(a),a.dataset.matchId=n.id;const s=n.teams.find((e=>e.isHome)),o=n.teams.find((e=>!e.isHome)),d=m(s.id)?.name||"Unknown",c=m(o.id)?.name||"Unknown",l=document.createElement("td");l.textContent=d,a.appendChild(l);const r=document.createElement("td");r.textContent=`${s.tds}-${o.tds}`,a.appendChild(r);const i=document.createElement("td");i.textContent=c,a.appendChild(i);const u=document.createElement("td");u.textContent=n.date||"N/A",a.appendChild(u)}},O=document.getElementById("home-select"),j=document.getElementById("away-select"),J=e=>{O.innerHTML='<option value="">-- Select Team --</option>',j.innerHTML='<option value="">-- Select Team --</option>',e.forEach((e=>{const t=document.createElement("option");t.value=e.id,t.textContent=`${e.name} (${e.ticker})`,O.appendChild(t.cloneNode(!0)),j.appendChild(t.cloneNode(!0))}))},R=document.getElementById("team-details-dialog"),W=document.getElementById("match-details-dialog"),z=document.getElementById("team-details-body"),F=document.getElementById("match-details-body");let _=null,G=null;const V=(e,t,n)=>{if(!e)return;G=e.id;const[a,s]=e.teams,d=e=>e&&0!==e.length?e.map((e=>`<li>${e}</li>`)).join(""):"<li>No bonuses earned.</li>";F.innerHTML=`\n        <div class="match-details-grid">\n            <div class="match-team-block">\n                <h4>${t?.name||"Unknown"} <span class="label">Home</span></h4>\n                <p><strong>TDs:</strong> ${a.tds}</p>\n                <p><strong>Casualties Caused:</strong> ${a.casualties}</p>\n                <p><strong>Passes:</strong> ${a.passes}</p>\n                <p><strong>Result:</strong> ${ee(a.result)} (+${a.basePoints} points)</p>\n                <p><strong>League Points:</strong> ${a.leaguePoints}</p>\n                <p><strong>Bonuses:</strong></p>\n                <ul>${d(a.bonusesApplied)}</ul>\n            </div>\n\n            <div class="match-team-block">\n                <h4>${n?.name||"Unknown"} <span class="label">Away</span></h4>\n                <p><strong>TDs:</strong> ${s.tds}</p>\n                <p><strong>Casualties Caused:</strong> ${s.casualties}</p>\n                <p><strong>Passes:</strong> ${s.passes}</p>\n                <p><strong>Result:</strong> ${ee(s.result)} (+${s.basePoints} points)</p>\n                <p><strong>League Points:</strong> ${s.leaguePoints}</p>\n                <p><strong>Bonuses:</strong></p>\n                <ul>${d(s.bonusesApplied)}</ul>\n            </div>\n        </div>\n        <p style="text-align:center; margin-top:1rem;"><strong>Date:</strong> ${e.date}</p>\n        `,document.getElementById("edit-match-btn").addEventListener("click",(()=>{te=e.id,re(!0);const t=e.teams.find((e=>e.isHome)),n=e.teams.find((e=>!e.isHome));J(o()),document.querySelector("#home-select").value=t.id,document.querySelector("#away-select").value=n.id,document.querySelector('[name="homeTDs"]').value=t.tds,document.querySelector('[name="awayTDs"]').value=n.tds,document.querySelector('[name="homePasses"]').value=t.passes,document.querySelector('[name="awayPasses"]').value=n.passes,document.querySelector('[name="homeCasualties"]').value=t.casualties,document.querySelector('[name="awayCasualties"]').value=n.casualties,document.querySelector('[name="homePainted"]').checked=t.painted,document.querySelector('[name="awayPainted"]').checked=n.painted,document.querySelector('[name="homeUnderdog"]').checked=t.underdog,document.querySelector('[name="awayUnderdog"]').checked=n.underdog,document.querySelector('[name="date"]').value=e.date,W.close(),document.getElementById("match-dialog").showModal()})),W.showModal()},Y=document.querySelectorAll("input"),K=document.querySelectorAll('input[type="number"]'),Q=document.querySelectorAll("select"),X=document.querySelectorAll('input[type="checkbox"]'),Z=()=>{Y.forEach((e=>{e.value=""})),K.forEach((e=>{e.value=0})),Q.forEach((e=>{e.selectedIndex=0})),X.forEach((e=>{e.checked=!1}))},ee=e=>e.charAt(0).toUpperCase()+e.slice(1);let te=null;const ne=()=>te,ae=e=>te=e;let se=null;const oe=()=>se,de=e=>se=e,ce=document.querySelector("#match-dialog-title"),le=document.querySelector("#add-match-btn"),re=e=>{e?(ce.textContent="Edit Match",le.textContent="Apply Edits"):(ce.textContent="Add Match",le.textContent="Add Match")};let ie=b("Fully Painted Team","painted","1 point awarded if your team is painted to the 3 color minimum.",1,1),me=b("Vulgar Display of Power","casualties","3 points (awarded if a team causes at least 3 casualties in a match)",3,3),ue=b("Aerial Domination","passes","3 points (for completing 3 successful passes in a match)",3,3),pe=b("Clean Sheet","opponent TDs","3 points (for holding opponents to zero touchdowns)",0,3),ge=b("It's Not the Size of the Dog...","underdog","3 points (for forcing a tie or win with a team value deficit of 150k or more)",1,3);document.addEventListener("DOMContentLoaded",(()=>{((e,t,n)=>{const a=y("teams"),s=y("matches"),o=y("bonuses");a&&e.setTeams(l(a)),s&&t.setMatches(s),o&&n.setBonuses(o)})(t,a,n),0===v().length&&(w(ie),w(me),w(ue),w(pe),w(ge)),(()=>{const e=document.getElementById("bonus-toggle-form");e.innerHTML="",v().forEach((t=>{const n=document.createElement("div");n.classList.add("bonus-toggle-label");const a=document.createElement("div");a.classList.add("bonus-toggle-top");const s=document.createElement("input");s.type="checkbox",s.name="bonusToggle",s.value=t.id,s.checked=t.active??!0,s.addEventListener("change",(e=>{t.active=e.target.checked,h("bonuses",v()),x(),M(o()),g(),U(T()),N(o())}));const d=document.createElement("span");d.textContent=t.name,a.appendChild(s),a.appendChild(d);const c=document.createElement("div");c.classList.add("bonus-detail"),c.textContent=t.description,n.addEventListener("click",(e=>{e.target!==s&&c.classList.toggle("show")})),n.appendChild(a),n.appendChild(c),e.appendChild(n)}))})(),M(o()),g(),Z(),N(o()),U(T())}));const he=document.getElementById("team-dialog"),ye=document.querySelector("#team-form #name-input"),fe=document.querySelector("#team-form #ticker-input");document.getElementById("new-team-btn").onclick=()=>{Z(),he.showModal()},document.getElementById("cancel-team-btn").onclick=()=>he.close(),ye.addEventListener("input",(()=>{const e=ye.value.trim().split(/\s+/).map((e=>e[0]?.toUpperCase()||"")).join("");fe.value=e.slice(0,3)})),document.querySelector("#add-team-btn").addEventListener("click",(e=>{e.preventDefault();const s=ye.value,d=fe.value,l=document.querySelector("#team-form #race-input").value,i=document.querySelector("#team-form #coach-input").value,m=oe(),p=m?c(s,l,i,d,m):c(s,l,i,d);m?(u(m,p),de(null)):r(p),document.querySelector("#add-team-btn").textContent="Add Team",document.querySelector("#team-form-title").textContent="New Team",M(o()),g(),f(t,a,n),N(o()),Z(),he.close()}));const Ee=document.getElementById("match-dialog");document.getElementById("new-match-btn").onclick=()=>{J(o()),Z(),ae(null),re(!1),Ee.showModal()},document.getElementById("cancel-match-btn").onclick=()=>{ae(null),Ee.close()},document.querySelector("#add-match-btn").addEventListener("click",(e=>{e.preventDefault();const s=document.querySelector("#home-select").value,d=document.querySelector("#away-select").value;if(s===d)return void alert("A team cannot play against itself.");const c=e=>{const t=document.querySelector(`[name="${e}"]`);return"checkbox"===t.type?t.checked:t.value},l=ne(),r=B(s,d,c("homeTDs"),c("awayTDs"),c("homePasses"),c("awayPasses"),c("homeCasualties"),c("awayCasualties"),c("homePainted"),c("awayPainted"),c("homeUnderdog"),c("awayUnderdog"),c("date"),l||null);l?(L(l,r),ae(null)):P(r),M(o()),g(),f(t,a,n),N(o()),U(T()),Ee.close()})),document.querySelector("#teams tbody").addEventListener("click",(e=>{const t=e.target.closest("tr");if(t?.dataset.teamId){const e=m(t.dataset.teamId);e&&(e=>{if(!e)return;_=e.id,z.innerHTML="";const t=document.createElement("div");t.classList.add("team-stats"),z.appendChild(t),t.innerHTML=`\n        <p><strong>Name:</strong> ${e.name}</p>\n        <p><strong>Race:</strong> ${e.race}</p>\n        <p><strong>Coach:</strong> ${e.coach}</p>\n        <p><strong>Ticker:</strong> ${e.ticker}</p>\n        <p><strong>Record:</strong> ${e.wins}-${e.draws}-${e.losses}</p>\n        <p><strong>League Points:</strong> ${e.leaguePoints}</p>\n        <p><strong>Rank:</strong> ${e.rank}</p>\n        <p><strong>Total TDs:</strong> ${e.totalTDs}</p>\n        <p><strong>Total Casualties Caused:</strong> ${e.totalCasualties}</p>\n        <p><strong>Total Games Played:</strong> ${e.gamesPlayed}</p>\n        `,document.getElementById("edit-team-btn").addEventListener("click",(()=>{de(e.id),document.querySelector('[name="name"]').value=e.name,document.querySelector('[name="race"]').value=e.race,document.querySelector('[name="coach"]').value=e.coach,document.querySelector('[name="ticker"]').value=e.ticker,document.querySelector("#add-team-btn").textContent="Apply Edits",document.querySelector("#team-form-title").textContent="Edit Team",R.close(),document.getElementById("team-dialog").showModal()}));const n=T().filter((t=>t.teams.some((t=>t.id===e.id)))).sort(((e,t)=>new Date(t.date)-new Date(e.date))),a=document.createElement("div");a.classList.add("team-match-history");const s=document.createElement("h4");if(s.textContent="Match History",a.appendChild(s),0===n.length){const e=document.createElement("div");e.classList.add("mini-match-row"),e.innerHTML='<span class="empty">No Matches Yet</span>',a.appendChild(e)}n.forEach((t=>{const[n,s]=t.teams,o=n.id===e.id,d=o?n:s,c=o?s:n,l=m(c.id)?.name||"Unknown",r=d.result,i=o?`${n.tds}-${s.tds}`:`${s.tds}-${n.tds}`,u=t.date,p=document.createElement("div");p.classList.add("mini-match-row"),p.innerHTML=`\n            <span class="match-date">${u}</span>\n            <span class="opponent-name">${l}</span>\n            <span class="score">${i}</span>\n            <span class="result ${r}">${ee(r)}</span>\n        `,p.addEventListener("click",(()=>{V(t,m(n.id),m(s.id))})),a.appendChild(p)})),z.appendChild(a),R.showModal()})(e)}})),document.querySelector("#matches tbody").addEventListener("click",(e=>{const t=e.target.closest("tr");if(t?.dataset.matchId){const e=T().find((e=>e.id===t.dataset.matchId));if(e){const t=e.teams.find((e=>e.isHome)),n=e.teams.find((e=>!e.isHome)),a=m(t.id),s=m(n.id);V(e,a,s)}}})),document.getElementById("delete-team-btn").addEventListener("click",(()=>{p(_),g(),f(t,a,n),N(o()),U(T()),document.getElementById("team-details-dialog").close()})),document.getElementById("delete-match-btn").addEventListener("click",(()=>{q(G),M(o()),g(),f(t,a,n),U(T()),N(o()),document.getElementById("match-details-dialog").close()}));const ve=document.getElementById("json-input"),Ce=document.getElementById("export-json"),be=document.getElementById("import-json");Ce.addEventListener("click",(()=>{const e={version:1,teams:o(),matches:T(),bonuses:v()},t=JSON.stringify(e,null,2);navigator.clipboard.writeText(t).then((()=>{alert("League data copied to clipboard!")})).catch((e=>{alert("Failed to copy JSON to clipboard"),console.error(e)}))})),be.addEventListener("click",(async()=>{let e=ve.value.trim();if(!e)try{if(e=await navigator.clipboard.readText(),!e.trim())return alert("Clipboard is empty or invalid.")}catch(e){return alert("Could not read from clipboard.")}try{const t=JSON.parse(e);if(console.log(t),!(t&&Array.isArray(t.teams)&&Array.isArray(t.matches)&&Array.isArray(t.bonuses)))return alert("Invalid JSON structure: expected { teams, matches, bonuses }");d(t.teams),I(t.matches),C(t.bonuses),h("teams",t.teams),h("matches",t.matches),h("bonuses",t.bonuses),console.log("Working here?"),M(o()),g(),console.log("Working here?"),N(o()),U(T()),console.log("Working here?"),alert("League data successfully imported!")}catch(e){console.error(e),alert("Error importing data. Please make sure it’s valid JSON.")}}))})();
//# sourceMappingURL=main.js.map