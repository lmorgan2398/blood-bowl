{"version":3,"file":"main.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,0hBCL9D,IAAIC,EAAQ,GAEZ,MAAMC,EAAW,IAAMD,EACjBE,EAAYC,GAAUH,EAAQG,EAE9BC,EAAa,CAACC,EAAMC,EAAMC,EAAOC,EAAQC,EAAKC,OAAOC,gBAChD,CACHN,OACAC,OACAC,QACAC,SACAI,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,aAAc,EACdC,KAAM,EACNC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACb,UAAIC,GACA,MAAO,GAAGC,KAAKT,QAAQS,KAAKR,SAASQ,KAAKP,QAC9C,EACAL,OAIFa,EAAkBC,GACfA,EAAWC,KAAIC,IACpB,MAAMC,EAAOtB,EAAWqB,EAAKpB,KAAMoB,EAAKnB,KAAMmB,EAAKlB,MAAOkB,EAAKjB,QAO/D,OANAkB,EAAKjB,GAAKgB,EAAKhB,GACfiB,EAAKd,KAAOa,EAAKb,KACjBc,EAAKb,MAAQY,EAAKZ,MAClBa,EAAKZ,OAASW,EAAKX,OACnBY,EAAKX,aAAeU,EAAKV,aACzBW,EAAKV,KAAOS,EAAKT,MAAQ,KAClBU,CAAI,IAITC,EAAWD,GAAS1B,EAAM4B,KAAKF,GAE/BG,EAAmBrB,GAAWR,EAAM8B,MAAKJ,GAAQA,EAAKlB,SAAWA,IAEjEuB,EAAetB,GAAOT,EAAM8B,MAAKJ,GAAQA,EAAKjB,KAAOA,IAErDuB,EAAc,CAACvB,EAAIwB,KACvB,MAAMC,EAAQlC,EAAMmC,WAAUC,GAAKA,EAAE3B,KAAOA,KAC7B,IAAXyB,EACFlC,EAAMkC,GAASD,EAEfI,QAAQC,KAAK,sCAAsC7B,IACrD,EAII8B,EAAkB9B,IACpBT,EAAMwC,SAAQ,CAACd,EAAMe,KACdhC,IAAOiB,EAAKjB,IACfT,EAAM0C,OAAOD,EAAG,EAChB,GACH,EAGCE,EAAc,KAChB,IAAIC,EAAeC,MAAMC,KAAK9C,GAC9B,IAAK,IAAIyC,EAAI,EAAGA,EAAIG,EAAaG,OAAQN,IAAK,CAC1C,IAAIO,EAAkBJ,EAAaH,GAAG1B,aAClCkC,EAAuBR,EAC3B,IAAK,IAAIS,EAAIT,EAAI,EAAGS,EAAIN,EAAaG,OAAQG,IACrCN,EAAaM,GAAGnC,aAAeiC,IAC/BA,EAAkBJ,EAAaM,GAAGnC,aAClCkC,EAAuBC,GAI/B,IAAIC,EAAOP,EAAaK,GACxBL,EAAaK,GAAwBL,EAAaH,GAClDG,EAAaH,GAAKU,CACtB,CACAP,EAAaJ,SAAQ,CAACd,EAAMe,KACxBf,EAAKV,KAAOyB,EAAI,CAAC,IAErBvC,EAAS0C,EAAa,EChFpBQ,EAAO,CAAClE,EAAKuC,KACf4B,aAAaC,QAAQpE,EAAKqE,KAAKC,UAAU/B,GAAM,EAG7CgC,EAAQvE,IACV,MAAMuC,EAAO4B,aAAaK,QAAQxE,GAClC,OAAOuC,EAAO8B,KAAKI,MAAMlC,GAAQ,IAAI,EAGnCmC,EAAU,CAACC,EAAaC,EAAeC,KACzCX,EAAK,QAASS,EAAY5D,YAC1BmD,EAAK,UAAWU,EAAcE,cAC9BZ,EAAK,UAAWW,EAAcE,aAAa,ECd/C,IAAIC,EAAU,GAEd,MAAMD,EAAa,IAAMC,EACnBC,EAAchE,GAAU+D,EAAU/D,EAElCiE,EAAc,CAAC/D,EAAMgE,EAAMC,EAAaC,EAAOC,KAE1C,CACHnE,OACAgE,OACAC,cACAC,QACAC,SACA/D,GAPUC,OAAOC,eAWnB8D,EAAYC,GAAUR,EAAQtC,KAAK8C,GAEnCC,EAAmBlE,IACrByD,EAAQ1B,SAAQ,CAACkC,EAAOjC,KAChBhC,IAAOiE,EAAMjE,IACjByD,EAAQxB,OAAOD,EAAG,EACjB,GACJ,EAGCmC,EAAe,CAACC,EAAQC,EAAQC,EAAYC,EAAQC,EAASC,KAC/D,IAAIV,EAAS,EACTW,EAAiB,GAoBrB,OAlBAjB,EAAQ1B,SAASkC,IACb,IAAqB,IAAjBA,EAAMU,OAAkB,OAC5B,MAAMC,EAA6B,gBAAdX,EAAML,MAA0BS,GAAUJ,EAAMH,OAAmB,OAAVM,GAC/D,cAAdH,EAAML,MAAwBU,GAAcL,EAAMH,OACpC,UAAdG,EAAML,MAAoBW,GAAUN,EAAMH,MAErCe,EAA+B,WAAdZ,EAAML,MAAqBY,GACnC,YAAdP,EAAML,MAAsBa,EAEzBG,GACAb,GAAUE,EAAMF,OAChBW,EAAevD,KAAK,GAAG8C,EAAMrE,UAAUqE,EAAMF,qBAAqBE,EAAMH,SAASG,EAAML,SAChFiB,IACPd,GAAUE,EAAMF,OAChBW,EAAevD,KAAK,GAAG8C,EAAMrE,UAAUqE,EAAMF,iBACjD,IAGG,CAAEA,SAAQW,iBAAe,EC7CpC,IAAII,EAAU,GAEd,MAAMvB,EAAa,IAAMuB,EAEnBC,EAAcrF,GAAUoF,EAAUpF,EAElCsF,EAAc,CAACC,EAAYC,EAAYC,EAASC,EAASC,EAAYC,EAAYC,EAAgBC,EAAgBC,EAAaC,EAAaC,EAAcC,EAAcC,EAAMC,EAAa,QAC5L,IAAIC,EAAUD,GAAc7F,OAAOC,aAE/B8F,EAAa,OACbC,EAAa,OAEbC,EAAiB,EACjBC,EAAiB,EAGjBhB,EAAUC,GACVY,EAAa,MACbE,GAAkB,EAClBD,EAAa,OACbE,GAAkB,GACXhB,EAAUC,GACjBY,EAAa,OACbE,GAAkB,EAClBD,EAAa,MACbE,GAAiB,IAEjBD,GAAiB,EACjBC,GAAiB,GAGrB,IAAIC,EAAgB,EAAqBJ,EAAYZ,EAASG,EAAgBF,EAAYI,EAAaE,GACnGU,EAAgB,EAAqBJ,EAAYd,EAASK,EAAgBF,EAAYI,EAAaE,GAEnGU,EAAkBF,EAAcrC,OAIhCwC,EAAmBJ,EAHDE,EAActC,OAKpC,MAAO,CACH8B,OACA7F,GAAI+F,EACJxG,MAAO,CACP,CACIS,GAAIiF,EACJuB,IAAKrB,EACLX,QAASiB,EACThB,SAAUkB,EACVrB,WAAYiB,EACZhB,OAAQc,EACRjB,OAAQ4B,EACRS,WAAYP,EACZ5F,aAhBe4F,EAAiBI,EAiBhCI,eAAgBN,EAAc1B,eAC9BiC,QAAQ,GAEZ,CACI3G,GAAIkF,EACJsB,IAAKpB,EACLZ,QAASkB,EACTjB,SAAUmB,EACVtB,WAAYkB,EACZjB,OAAQe,EACRlB,OAAQ6B,EACRQ,WAAYN,EACZ7F,aAAciG,EACdG,eAAgBL,EAAc3B,eAC9BiC,QAAQ,IAGhB,EAGEC,EAAYC,GAAU/B,EAAQ3D,KAAK0F,GAEnCC,EAAmB9G,IACrB8E,EAAQ/C,SAAQ,CAAC8E,EAAO7E,KACjBhC,IAAO6G,EAAM7G,IAChB8E,EAAQ7C,OAAOD,EAAG,EAClB,GACF,EAGA+E,EAAe,CAAC/G,EAAIgH,KACxB,MAAMvF,EAAQqD,EAAQpD,WAAUuF,GAAKA,EAAEjH,KAAOA,KAC/B,IAAXyB,EACFqD,EAAQrD,GAASuF,EAEjBpF,QAAQC,KAAK,wCAAwC7B,IACvD,EAIIkH,EAAgBlH,GAAO8E,EAAQzD,MAAKwF,GAASA,EAAM7G,KAAOA,IAE1DmH,EAAiB5H,IACrB,MAAMuF,EAAUvB,IAGhBhE,EAAMwC,SAAQd,IACZA,EAAKd,KAAO,EACZc,EAAKb,MAAQ,EACba,EAAKZ,OAAS,EACdY,EAAKX,aAAe,EACpBW,EAAKT,SAAW,EAChBS,EAAKR,gBAAkB,EACvBQ,EAAKP,YAAc,CAAC,IAGtBoE,EAAQ/C,SAAQ8E,IACdA,EAAMtH,MAAMwC,SAAQqF,IAClB,MAAMnG,EAAO1B,EAAM8B,MAAKM,GAAKA,EAAE3B,KAAOoH,EAAUpH,KAC3CiB,IAELA,EAAKX,cAAgB+G,OAAOD,EAAU9G,cACtCW,EAAKT,UAAY6G,OAAOD,EAAUZ,KAClCvF,EAAKR,iBAAmB4G,OAAOD,EAAU9C,YACzCrD,EAAKP,aAAe,EAEK,QAArB0G,EAAUhD,OACZnD,EAAKd,MAAQ,EACiB,SAArBiH,EAAUhD,OACnBnD,EAAKb,OAAS,EACgB,SAArBgH,EAAUhD,SACnBnD,EAAKZ,QAAU,GACjB,GACA,GACF,EAGEiH,EAA6B,KACV/D,IAERxB,SAAS8E,IACtB,MAAOU,EAAMC,GAAQX,EAAMtH,MAErByH,EAAehC,EACnBuC,EAAKvH,GACLwH,EAAKxH,GACLuH,EAAKf,IACLgB,EAAKhB,IACLe,EAAKhD,OACLiD,EAAKjD,OACLgD,EAAKjD,WACLkD,EAAKlD,WAELiD,EAAK/C,QACLgD,EAAKhD,QACL+C,EAAK9C,SACL+C,EAAK/C,SACLoC,EAAMhB,MAIRmB,EAAahH,GAAK6G,EAAM7G,GAExB+G,EAAaF,EAAM7G,GAAIgH,EAAa,GACpC,EC7JJ,IAAIS,EAAaC,SAASC,cAAc,gBAExC,MAAMC,EAAgBC,IAElB,KAAMJ,EAAWK,YACbL,EAAWM,YAAYN,EAAWK,YAItCD,EAAU9F,SAASd,IACf,IAAI+G,EAAKN,SAASO,cAAc,MAChCR,EAAWS,YAAYF,GACvBA,EAAGG,QAAQC,OAASnH,EAAKjB,GAEzB,IAAIqI,EAAMX,SAASO,cAAc,MACjCD,EAAGE,YAAYG,GACfA,EAAIC,YAAcrH,EAAKV,KAEvB,IAAIgI,EAAMb,SAASO,cAAc,MACjCD,EAAGE,YAAYK,GACfA,EAAID,YAAcrH,EAAKrB,KAEvB,IAAI4I,EAAMd,SAASO,cAAc,MACjCD,EAAGE,YAAYM,GACfA,EAAIF,YAAcrH,EAAKN,OAEvB,IAAI8H,EAAMf,SAASO,cAAc,MACjCD,EAAGE,YAAYO,GACfA,EAAIH,YAAcrH,EAAKX,YAAY,GACtC,EAGL,IAAIoI,EAAehB,SAASC,cAAc,kBAE1C,MAAMgB,EAAkBC,IAKpB,IAHAA,EAAYC,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAElD,MAAQ,IAAImD,KAAKF,EAAEjD,QAGlD6C,EAAaZ,YAChBY,EAAaX,YAAYW,EAAaZ,YAI1Cc,EAAY7G,SAAS8E,IACjB,MAAMmB,EAAKN,SAASO,cAAc,MAClCS,EAAaR,YAAYF,GACzBA,EAAGG,QAAQc,QAAUpC,EAAM7G,GAE3B,MAAMkJ,EAAWrC,EAAMtH,MAAM8B,MAAKM,GAAKA,EAAEgF,SACnCwC,EAAWtC,EAAMtH,MAAM8B,MAAKM,IAAMA,EAAEgF,SAEpCyC,EAAe,EAAkBF,EAASlJ,KAAKJ,MAAQ,UACvDyJ,EAAe,EAAkBF,EAASnJ,KAAKJ,MAAQ,UAEvDyI,EAAMX,SAASO,cAAc,MACnCI,EAAIC,YAAcc,EAClBpB,EAAGE,YAAYG,GAEf,MAAME,EAAMb,SAASO,cAAc,MACnCM,EAAID,YAAc,GAAGY,EAAS1C,OAAO2C,EAAS3C,MAC9CwB,EAAGE,YAAYK,GAEf,MAAMC,EAAMd,SAASO,cAAc,MACnCO,EAAIF,YAAce,EAClBrB,EAAGE,YAAYM,GAEf,MAAMC,EAAMf,SAASO,cAAc,MACnCQ,EAAIH,YAAczB,EAAMhB,MAAQ,MAChCmC,EAAGE,YAAYO,EAClB,GAAE,EAIDa,EAAa5B,SAAS6B,eAAe,eACrCC,EAAa9B,SAAS6B,eAAe,eAErCE,EAAuB5B,IAGzByB,EAAWI,UAAY,8CACvBF,EAAWE,UAAY,8CAEvB7B,EAAU9F,SAAQd,IACd,MAAM0I,EAASjC,SAASO,cAAc,UACtC0B,EAAOrK,MAAQ2B,EAAKjB,GACpB2J,EAAOrB,YAAc,GAAGrH,EAAKrB,SAASqB,EAAKlB,UAG3CuJ,EAAWpB,YAAYyB,EAAOC,WAAU,IACxCJ,EAAWtB,YAAYyB,EAAOC,WAAU,GAAM,GAChD,EAIAC,EAAanC,SAAS6B,eAAe,uBACrCO,EAAcpC,SAAS6B,eAAe,wBACtCQ,EAAWrC,SAAS6B,eAAe,qBACnCS,EAAYtC,SAAS6B,eAAe,sBAE1C,IAAIU,EAAiB,KACjBC,EAAkB,KAGtB,MA6FMC,EAAmB,CAACtD,EAAOqC,EAAUC,KACvC,IAAKtC,EAAO,OAEZqD,EAAkBrD,EAAM7G,GAExB,MAAOuH,EAAMC,GAAQX,EAAMtH,MAErB6K,EAAiB3G,GACdA,GAA8B,IAAnBA,EAAQnB,OACjBmB,EAAQ1C,KAAIgI,GAAK,OAAOA,WAAUsB,KAAK,IADD,8BAIjDL,EAAUN,UAAY,+GAGJR,GAAUtJ,MAAQ,4FACG2H,EAAKf,mEACSe,EAAKjD,+DAChBiD,EAAKhD,2DACL+F,GAAW/C,EAAKnD,aAAamD,EAAKd,8EAC3Bc,EAAKjH,2FAEpC8J,EAAc7C,EAAKb,+GAInByC,GAAUvJ,MAAQ,4FACG4H,EAAKhB,mEACSgB,EAAKlD,+DAChBkD,EAAKjD,2DACL+F,GAAW9C,EAAKpD,aAAaoD,EAAKf,8EAC3Be,EAAKlH,2FAEpC8J,EAAc5C,EAAKd,2IAGuCG,EAAMhB,qBAGlF6B,SAAS6B,eAAe,kBAAkBgB,iBAAiB,SAAS,KAChEC,GAAiB3D,EAAM7G,GACvByK,IAAiB,GAEjB,MAAMlD,EAAOV,EAAMtH,MAAM8B,MAAKM,GAAKA,EAAEgF,SAC/Ba,EAAOX,EAAMtH,MAAM8B,MAAKM,IAAMA,EAAEgF,SAEtC8C,EAAoB,KAGpB/B,SAASC,cAAc,gBAAgBrI,MAAQiI,EAAKvH,GACpD0H,SAASC,cAAc,gBAAgBrI,MAAQkI,EAAKxH,GACpD0H,SAASC,cAAc,oBAAoBrI,MAAQiI,EAAKf,IACxDkB,SAASC,cAAc,oBAAoBrI,MAAQkI,EAAKhB,IACxDkB,SAASC,cAAc,uBAAuBrI,MAAQiI,EAAKhD,OAC3DmD,SAASC,cAAc,uBAAuBrI,MAAQkI,EAAKjD,OAC3DmD,SAASC,cAAc,2BAA2BrI,MAAQiI,EAAKjD,WAC/DoD,SAASC,cAAc,2BAA2BrI,MAAQkI,EAAKlD,WAC/DoD,SAASC,cAAc,wBAAwB+C,QAAUnD,EAAK/C,QAC9DkD,SAASC,cAAc,wBAAwB+C,QAAUlD,EAAKhD,QAC9DkD,SAASC,cAAc,yBAAyB+C,QAAUnD,EAAK9C,SAC/DiD,SAASC,cAAc,yBAAyB+C,QAAUlD,EAAK/C,SAC/DiD,SAASC,cAAc,iBAAiBrI,MAAQuH,EAAMhB,KAEtDiE,EAAYa,QACZjD,SAAS6B,eAAe,gBAAgBqB,WAAW,IAGvDd,EAAYc,WAAW,EAGrBC,EAASnD,SAASoD,iBAAiB,SACnCC,EAAYrD,SAASoD,iBAAiB,wBACtCE,EAAUtD,SAASoD,iBAAiB,UACpCG,EAASvD,SAASoD,iBAAiB,0BACnCI,EAAc,KAChBL,EAAO9I,SAASoJ,IACZA,EAAM7L,MAAQ,EAAE,IAEpByL,EAAUhJ,SAASoJ,IACfA,EAAM7L,MAAQ,CAAC,IAEnB0L,EAAQjJ,SAASqJ,IACbA,EAAOC,cAAgB,CAAC,IAE5BJ,EAAOlJ,SAASuJ,IACZA,EAAMZ,SAAU,CAAK,GACvB,EA0DAJ,GAAciB,GAASA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAEvE,IAAIlB,GAAiB,KACrB,MAAMmB,GAAoB,IAAMnB,GAC1BoB,GAAqB5L,GAAOwK,GAAiBxK,EAEnD,IAAI6L,GAAgB,KACpB,MAAMC,GAAmB,IAAMD,GACzBE,GAAoB/L,GAAO6L,GAAgB7L,EAE3CgM,GAAmBtE,SAASC,cAAc,uBAC1CsE,GAAoBvE,SAASC,cAAc,kBAEpC8C,GAAoByB,IAC3BA,GACFF,GAAiB1D,YAAc,aAC/B2D,GAAkB3D,YAAc,gBAEhC0D,GAAiB1D,YAAc,YAC/B2D,GAAkB3D,YAAc,YAClC,ECtWF,IAAI6D,GAAS,EACX,qBACA,UACA,kEACA,EACA,GAGEC,GAAS,EACX,0BACA,aACA,uEACA,EACA,GAGEC,GAAS,EACX,oBACA,SACA,2DACA,EACA,GAGEC,GAAS,EACX,cACA,eACA,sDACA,EACA,GAGEC,GAAS,EACX,kCACA,WACA,gFACA,EACA,GAKF7E,SAAS6C,iBAAiB,oBAAoB,KJjC9B,EAACnH,EAAaC,EAAeC,KACzC,MAAMkJ,EAAWxJ,EAAK,SAChByJ,EAAezJ,EAAK,WACpB0J,EAAe1J,EAAK,WAEtBwJ,GAAUpJ,EAAY3D,SAASoB,EAAe2L,IAC9CC,GAAcpJ,EAAc0B,WAAW0H,GACvCC,GAAcpJ,EAAcI,WAAWgJ,EAAa,EI2B1D,CAAgB,EAAO,EAAS,GAEI,IAAhC,IAAqBpK,SACvB,EAAiB6J,IACjB,EAAiBC,IACjB,EAAiBC,IACjB,EAAiBC,IACjB,EAAiBC,KDyOM,MACzB,MAAMI,EAAYjF,SAAS6B,eAAe,qBAC1CoD,EAAUjD,UAAY,GAEtB,IAAqB3H,SAAQkC,IAC3B,MAAM2I,EAAUlF,SAASO,cAAc,OACvC2E,EAAQC,UAAUC,IAAI,sBAGtB,MAAMC,EAASrF,SAASO,cAAc,OACtC8E,EAAOF,UAAUC,IAAI,oBAErB,MAAME,EAAWtF,SAASO,cAAc,SACxC+E,EAASpJ,KAAO,WAChBoJ,EAASpN,KAAO,cAChBoN,EAAS1N,MAAQ2E,EAAMjE,GACvBgN,EAAStC,QAAUzG,EAAMU,SAAU,EAEnCqI,EAASzC,iBAAiB,UAAW0C,IACnChJ,EAAMU,OAASsI,EAAEC,OAAOxC,QACxB,EAAa,UAAW,KAExB,IAEA,EAAsB,KACtB,IAEA/B,EAAe,KACff,EAAa,IAAiB,IAGhC,MAAMuF,EAAWzF,SAASO,cAAc,QACxCkF,EAAS7E,YAAcrE,EAAMrE,KAE7BmN,EAAO7E,YAAY8E,GACnBD,EAAO7E,YAAYiF,GAGnB,MAAMC,EAAS1F,SAASO,cAAc,OACtCmF,EAAOP,UAAUC,IAAI,gBACrBM,EAAO9E,YAAcrE,EAAMJ,YAG3B+I,EAAQrC,iBAAiB,SAAU0C,IAC7BA,EAAEC,SAAWF,GACfI,EAAOP,UAAUQ,OAAO,OAC1B,IAGFT,EAAQ1E,YAAY6E,GACpBH,EAAQ1E,YAAYkF,GACpBT,EAAUzE,YAAY0E,EAAQ,GAC9B,EC3RF,GAEA,EAAsB,KACtB,IACA,IACA,EAAqB,KACrB,EAAuB,IAAqB,IAI9C,MAAM,GAAalF,SAAS6B,eAAe,eACrC+D,GAAmB5F,SAASC,cAAc,0BAC1C4F,GAAqB7F,SAASC,cAAc,4BAElDD,SAAS6B,eAAe,gBAAgBiE,QAAU,KAC9C,IACA,GAAW5C,WAAW,EAE1BlD,SAAS6B,eAAe,mBAAmBiE,QAAU,IAAM,GAAW7C,QAEtE2C,GAAiB/C,iBAAiB,SAAS,KACzC,MACMkD,EADQH,GAAiBhO,MAAMoO,OAAOC,MAAM,cAC3B5M,KAAI6M,GAAKA,EAAE,IAAInC,eAAiB,KAAIpB,KAAK,IAChEkD,GAAmBjO,MAAQmO,EAAS/B,MAAM,EAAG,EAAE,IAIjDhE,SAASC,cAAc,iBAAiB4C,iBAAiB,SAAU0C,IACjEA,EAAEY,iBACF,MAAMjO,EAAO0N,GAAiBhO,MACxBS,EAASwN,GAAmBjO,MAC5BO,EAAO6H,SAASC,cAAc,0BAA0BrI,MACxDQ,EAAQ4H,SAASC,cAAc,2BAA2BrI,MAC1DuM,EAAgB,KAEhBiC,EAAUjC,EACd,EAAiBjM,EAAMC,EAAMC,EAAOC,EAAQ8L,GAC5C,EAAiBjM,EAAMC,EAAMC,EAAOC,GAGlC8L,GACF,EAAkBA,EAAeiC,GACjC,GAAyB,OAEzB,EAAcA,GAGhBpG,SAASC,cAAc,iBAAiBW,YAAc,WACtDZ,SAASC,cAAc,oBAAoBW,YAAc,WACzD,EAAsB,KACtB,IACA,EAAgB,EAAO,EAAS,GAChC,EAAqB,KACrB,IACA,GAAWqC,OAAO,IAIpB,MAAM,GAAcjD,SAAS6B,eAAe,gBAE5C7B,SAAS6B,eAAe,iBAAiBiE,QAAU,KACjD,EAA4B,KAC5B,IAEA,GAA0B,MAC1B,IAAyB,GACzB,GAAY5C,WAAW,EAGzBlD,SAAS6B,eAAe,oBAAoBiE,QAAU,KACpD,GAA0B,MAC1B,GAAY7C,OAAO,EAGrBjD,SAASC,cAAc,kBAAkB4C,iBAAiB,SAAU0C,IAClEA,EAAEY,iBAEF,MAAME,EAASrG,SAASC,cAAc,gBAAgBrI,MAChD0O,EAAStG,SAASC,cAAc,gBAAgBrI,MAEtD,GAAIyO,IAAWC,EAEb,YADAC,MAAM,sCAIR,MAAMC,EAActO,IAClB,MAAMuO,EAAKzG,SAASC,cAAc,UAAU/H,OAC5C,MAAmB,aAAZuO,EAAGvK,KAAsBuK,EAAGzD,QAAUyD,EAAG7O,KAAK,EAGjDkL,EAAiB,KAEjB4D,EAAW,EACfL,EAAQC,EACRE,EAAY,WAAYA,EAAY,WACpCA,EAAY,cAAeA,EAAY,cACvCA,EAAY,kBAAmBA,EAAY,kBAC3CA,EAAY,eAAgBA,EAAY,eACxCA,EAAY,gBAAiBA,EAAY,gBACzCA,EAAY,QACZ1D,GAAkB,MAGhBA,GACF,EAAqBA,EAAgB4D,GACrC,GAA0B,OAE1B,EAAiBA,GAGnB,EAAsB,KACtB,IACA,EAAgB,EAAO,EAAS,GAChC,EAAqB,KACrB,EAAuB,KAEvB,GAAYzD,OAAO,IAIrBjD,SAASC,cAAc,gBAAgB4C,iBAAiB,SAAU0C,IAChE,MAAMoB,EAAMpB,EAAEC,OAAOoB,QAAQ,MAC7B,GAAID,GAAKlG,QAAQC,OAAQ,CACvB,MAAMnH,EAAO,EAAkBoN,EAAIlG,QAAQC,QACvCnH,GD3EgB,CAACA,IACrB,IAAKA,EAAM,OAEXgJ,EAAiBhJ,EAAKjB,GAEtB+J,EAASL,UAAY,GAErB,MAAM6E,EAAY7G,SAASO,cAAc,OACzCsG,EAAU1B,UAAUC,IAAI,cACxB/C,EAAS7B,YAAYqG,GAErBA,EAAU7E,UAAY,uCACUzI,EAAKrB,+CACLqB,EAAKpB,gDACJoB,EAAKnB,kDACJmB,EAAKlB,mDACLkB,EAAKd,QAAQc,EAAKb,SAASa,EAAKZ,0DACzBY,EAAKX,uDACdW,EAAKV,oDACAU,EAAKT,sEACSS,EAAKR,wEACVQ,EAAKP,4BAGnDgH,SAAS6B,eAAe,iBAAiBgB,iBAAiB,SAAS,KAC/DwB,GAAiB9K,EAAKjB,IAEtB0H,SAASC,cAAc,iBAAiBrI,MAAQ2B,EAAKrB,KACrD8H,SAASC,cAAc,iBAAiBrI,MAAQ2B,EAAKpB,KACrD6H,SAASC,cAAc,kBAAkBrI,MAAQ2B,EAAKnB,MACtD4H,SAASC,cAAc,mBAAmBrI,MAAQ2B,EAAKlB,OAEvD2H,SAASC,cAAc,iBAAiBW,YAAc,cACtDZ,SAASC,cAAc,oBAAoBW,YAAc,YAEzDuB,EAAWc,QACXjD,SAAS6B,eAAe,eAAeqB,WAAW,IAKtD,MAAM4D,EAAc,IACjBC,QAAO5H,GAASA,EAAMtH,MAAMmP,MAAK/M,GAAKA,EAAE3B,KAAOiB,EAAKjB,OACpD6I,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAElD,MAAQ,IAAImD,KAAKF,EAAEjD,QAE1C8I,EAAejH,SAASO,cAAc,OAC5C0G,EAAa9B,UAAUC,IAAI,sBAE3B,MAAM8B,EAAgBlH,SAASO,cAAc,MAI7C,GAHA2G,EAActG,YAAc,gBAC5BqG,EAAazG,YAAY0G,GAEC,IAAvBJ,EAAYlM,OAAc,CACzB,MAAM+L,EAAM3G,SAASO,cAAc,OACnCoG,EAAIxB,UAAUC,IAAI,kBAClBuB,EAAI3E,UAAY,4CAChBiF,EAAazG,YAAYmG,EAC7B,CAEAG,EAAYzM,SAAQ8E,IAChB,MAAOU,EAAMC,GAAQX,EAAMtH,MACrBoH,EAASY,EAAKvH,KAAOiB,EAAKjB,GAC1B6O,EAAOlI,EAASY,EAAOC,EACvBsH,EAAWnI,EAASa,EAAOD,EAE3BwH,EAAiB,EAAkBD,EAAS9O,KAAKD,QAAU,MAC3DqE,EAASyK,EAAKzK,OACd4K,EAAQrI,EAAS,GAAGY,EAAKf,OAAOgB,EAAKhB,MAAQ,GAAGgB,EAAKhB,OAAOe,EAAKf,MACjEX,EAAOgB,EAAMhB,KAEbwI,EAAM3G,SAASO,cAAc,OACnCoG,EAAIxB,UAAUC,IAAI,kBAClBuB,EAAI3E,UAAY,0CACe7D,qDACGkJ,6CACRC,6CACA5K,MAAWkG,GAAWlG,sBAGhDiK,EAAI9D,iBAAiB,SAAS,KAC1BJ,EAAiBtD,EAAO,EAAkBU,EAAKvH,IAAK,EAAkBwH,EAAKxH,IAAI,IAGnF2O,EAAazG,YAAYmG,EAAI,IAGjCtE,EAAS7B,YAAYyG,GAErB9E,EAAWe,WAAW,ECZpB,CAAwB3J,EAE5B,KAGFyG,SAASC,cAAc,kBAAkB4C,iBAAiB,SAAU0C,IAClE,MAAMoB,EAAMpB,EAAEC,OAAOoB,QAAQ,MAC7B,GAAID,GAAKlG,QAAQc,QAAS,CACxB,MAAMpC,EAAQ,IAAqBxF,MAAK4F,GAAKA,EAAEjH,KAAOqO,EAAIlG,QAAQc,UAClE,GAAIpC,EAAO,CACT,MAAMU,EAAOV,EAAMtH,MAAM8B,MAAKM,GAAKA,EAAEgF,SAC/Ba,EAAOX,EAAMtH,MAAM8B,MAAKM,IAAMA,EAAEgF,SAChCuC,EAAW,EAAkB3B,EAAKvH,IAClCmJ,EAAW,EAAkB3B,EAAKxH,IACxC,EAAyB6G,EAAOqC,EAAUC,EAC5C,CACF,KAIFzB,SAAS6B,eAAe,mBAAmBgB,iBAAiB,SAAS,KACnE,EAAqB,GACrB,IACA,EAAgB,EAAO,EAAS,GAChC,EAAqB,KACrB,EAAuB,KACvB7C,SAAS6B,eAAe,uBAAuBoB,OAAO,IAGxDjD,SAAS6B,eAAe,oBAAoBgB,iBAAiB,SAAS,KACpE,EAAwB,GACxB,EAAsB,KACtB,IACA,EAAgB,EAAO,EAAS,GAChC,EAAuB,KACvB,EAAqB,KACrB7C,SAAS6B,eAAe,wBAAwBoB,OAAO,IAIzD,MAAMsE,GAAYvH,SAAS6B,eAAe,cACpC2F,GAAYxH,SAAS6B,eAAe,eACpC4F,GAAYzH,SAAS6B,eAAe,eAE1C2F,GAAU3E,iBAAiB,SAAS,KAClC,MAAM6E,EAAa,CACjBC,QAAS,EACT9P,MAAO,IACPuF,QAAS,IACTrB,QAAS,KAGL6L,EAAOxM,KAAKC,UAAUqM,GAC5BG,UAAUC,UAAUC,UAAUH,GAAMI,MAAK,KACvCzB,MAAM,mCAAmC,IACxC0B,OAAMC,IACP3B,MAAM,oCACNrM,QAAQiO,MAAMD,EAAI,GAClB,IAGJT,GAAU5E,iBAAiB,SAASuF,UAClC,IAAIC,EAAWd,GAAU3P,MAAMoO,OAG/B,IAAKqC,EACH,IAEE,GADAA,QAAiBR,UAAUC,UAAUQ,YAChCD,EAASrC,OAAQ,OAAOO,MAAM,iCACrC,CAAE,MAAO2B,GACP,OAAO3B,MAAM,iCACf,CAGF,IACE,MAAMgC,EAASnN,KAAKI,MAAM6M,GAI1B,GAHAnO,QAAQsO,IAAID,KAITA,GACA7N,MAAM+N,QAAQF,EAAO1Q,QACrB6C,MAAM+N,QAAQF,EAAOnL,UACrB1C,MAAM+N,QAAQF,EAAOxM,UAEtB,OAAOwK,MAAM,gEAIf,EAAegC,EAAO1Q,OACtB,EAAmB0Q,EAAOnL,SAC1B,EAAmBmL,EAAOxM,SAG1B,EAAa,QAASwM,EAAO1Q,OAC7B,EAAa,UAAW0Q,EAAOnL,SAC/B,EAAa,UAAWmL,EAAOxM,SAE/B7B,QAAQsO,IAAI,iBAEZ,EAAsB,KACtB,IAEAtO,QAAQsO,IAAI,iBAEZ,EAAqB,KACrB,EAAuB,KACvBtO,QAAQsO,IAAI,iBAEZjC,MAAM,qCACR,CAAE,MAAO2B,GACPhO,QAAQiO,MAAMD,GACd3B,MAAM,0DACR,I","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/teams.js","webpack:///./src/storage.js","webpack:///./src/bonuses.js","webpack:///./src/matches.js","webpack:///./src/display.js","webpack:///./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","let teams = [];\n\nconst getTeams = () => teams;\nconst setTeams = (array) => teams = array;\n\nconst createTeam = (name, race, coach, ticker, id = crypto.randomUUID()) => {\n    return {\n        name, \n        race, \n        coach, \n        ticker,\n        wins: 0,\n        draws: 0,\n        losses: 0,\n        leaguePoints: 0,\n        rank: 1,\n        totalTDs: 0,\n        totalCasualties: 0,\n        gamesPlayed: 0,\n        get record() {\n            return `${this.wins}-${this.draws}-${this.losses}`\n        },\n        id,\n    }\n};\n\nconst rehydrateTeams = (plainArray) => {\n  return plainArray.map(data => {\n    const team = createTeam(data.name, data.race, data.coach, data.ticker);\n    team.id = data.id;\n    team.wins = data.wins;\n    team.draws = data.draws;\n    team.losses = data.losses;\n    team.leaguePoints = data.leaguePoints;\n    team.rank = data.rank ?? null;\n    return team;\n  });\n};\n\nconst addTeam = (team) => teams.push(team);\n\nconst getTeamByTicker = (ticker) => teams.find(team => team.ticker === ticker);\n\nconst getTeamByID = (id) => teams.find(team => team.id === id);\n\nconst setTeamByID = (id, updatedTeam) => {\n  const index = teams.findIndex(t => t.id === id);\n  if (index !== -1) {\n    teams[index] = updatedTeam;\n  } else {\n    console.warn(`setTeamByID: No team found with id ${id}`);\n  }\n};\n\n\nconst removeTeamByID = (id) => {\n    teams.forEach((team, i) => {\n        if(id === team.id) {\n        teams.splice(i, 1);\n        }\n    })\n}\n\nconst assignRanks = () => {\n    let orderedTeams = Array.from(teams);\n    for (let i = 0; i < orderedTeams.length; i++) {\n        let leaguePointsMax = orderedTeams[i].leaguePoints;\n        let leaguePointsMaxIndex = i;\n        for (let j = i + 1; j < orderedTeams.length; j++) {\n            if (orderedTeams[j].leaguePoints > leaguePointsMax) {\n                leaguePointsMax = orderedTeams[j].leaguePoints;\n                leaguePointsMaxIndex = j;\n            }\n        }\n        // Swap values\n        let temp = orderedTeams[leaguePointsMaxIndex];\n        orderedTeams[leaguePointsMaxIndex] = orderedTeams[i];\n        orderedTeams[i] = temp;\n    }\n    orderedTeams.forEach((team, i) => {\n        team.rank = i + 1;\n    });\n    setTeams(orderedTeams);\n}\n\nexport { getTeams, setTeams, createTeam, rehydrateTeams, addTeam, getTeamByTicker, getTeamByID, setTeamByID, removeTeamByID, assignRanks }","import { rehydrateTeams } from './teams.js';\n\nconst save = (key, data) => {\n    localStorage.setItem(key, JSON.stringify(data));\n};\n\nconst load = (key) => {\n    const data = localStorage.getItem(key);\n    return data ? JSON.parse(data) : null;\n};\n\nconst saveAll = (teamsModule, matchesModule, bonusesModule) => {\n    save('teams', teamsModule.getTeams());\n    save('matches', matchesModule.getMatches());\n    save('bonuses', bonusesModule.getBonuses());\n};\n\nconst loadAll = (teamsModule, matchesModule, bonusesModule) => {\n    const rawTeams = load('teams');\n    const savedMatches = load('matches');\n    const savedBonuses = load('bonuses');\n\n    if (rawTeams) teamsModule.setTeams(rehydrateTeams(rawTeams));\n    if (savedMatches) matchesModule.setMatches(savedMatches);\n    if (savedBonuses) bonusesModule.setBonuses(savedBonuses);\n};\n\nexport { save, saveAll, loadAll }\n","let bonuses = [];\n\nconst getBonuses = () => bonuses;\nconst setBonuses = (array) => bonuses = array;\n\nconst createBonus = (name, type, description, count, points) => {\n    let bonusID = crypto.randomUUID();\n    return {\n        name,\n        type,\n        description,\n        count,\n        points,\n        id: bonusID,\n    }\n};\n\nconst addBonus = (bonus) => bonuses.push(bonus);\n\nconst removeBonusByID = (id) => {\n    bonuses.forEach((bonus, i) => {\n        if (id === bonus.id) {\n        bonuses.splice(i, 1);\n        };\n    })\n};\n\nconst applyBonuses = (result, oppTDs, casualties, passes, painted, underdog) => {\n    let points = 0;\n    let appliedBonuses = [];\n\n    bonuses.forEach((bonus) => {\n        if (bonus.active === false) return;\n        const appliesAuto = (bonus.type == 'opponent TDs' && oppTDs <= bonus.count && result == 'win') || \n        (bonus.type == 'casualties' && casualties >= bonus.count) ||\n        (bonus.type == 'passes' && passes >= bonus.count);\n\n        const appliesManual = (bonus.type == 'painted' && painted) ||\n        (bonus.type == 'underdog' && underdog);\n\n        if (appliesAuto) {\n            points += bonus.points;\n            appliedBonuses.push(`${bonus.name}: +${bonus.points} points for ${bonus.count} ${bonus.type}`);\n        } else if (appliesManual) {\n            points += bonus.points;\n            appliedBonuses.push(`${bonus.name}: +${bonus.points} points`);\n        }\n    })\n\n    return { points, appliedBonuses }\n}\n\nexport { getBonuses, setBonuses, createBonus, addBonus, removeBonusByID, applyBonuses }","import * as bonuses from './bonuses.js';\nimport * as teams from './teams.js';\nimport * as storage from './storage.js';\n\nlet matches = [];\n\nconst getMatches = () => matches;\n\nconst setMatches = (array) => matches = array;\n\nconst createMatch = (homeTeamID, awayTeamID, homeTDs, awayTDs, homePasses, awayPasses, homeCasualties, awayCasualties, homePainted, awayPainted, homeUnderdog, awayUnderdog, date, existingID = null) => {\n    let matchID = existingID || crypto.randomUUID();\n\n    let homeResult = 'draw';\n    let awayResult = 'draw';\n\n    let homeBasePoints = 0;\n    let awayBasePoints = 0;\n\n    // Check for winners/losers and apply base points\n    if (homeTDs > awayTDs) {\n        homeResult = 'win';\n        homeBasePoints += 3;\n        awayResult = 'loss';\n        awayBasePoints += 1;\n    } else if (homeTDs < awayTDs) {\n        homeResult = 'loss';\n        homeBasePoints += 1;\n        awayResult = 'win';\n        awayBasePoints +=3;\n    } else {\n        homeBasePoints +=2;\n        awayBasePoints +=2;\n    }\n\n    let homeBonusData = bonuses.applyBonuses(homeResult, awayTDs, homeCasualties, homePasses, homePainted, homeUnderdog);\n    let awayBonusData = bonuses.applyBonuses(awayResult, homeTDs, awayCasualties, awayPasses, awayPainted, awayUnderdog);\n\n    let homeBonusPoints = homeBonusData.points;\n    let awayBonusPoints = awayBonusData.points;\n\n    let homeLeaguePoints = homeBasePoints + homeBonusPoints;\n    let awayLeaguePoints = awayBasePoints + awayBonusPoints;\n\n    return {\n        date,\n        id: matchID,\n        teams: [\n        {\n            id: homeTeamID,\n            tds: homeTDs,\n            painted: homePainted,\n            underdog: homeUnderdog,\n            casualties: homeCasualties,\n            passes: homePasses,\n            result: homeResult,\n            basePoints: homeBasePoints,\n            leaguePoints: homeLeaguePoints,\n            bonusesApplied: homeBonusData.appliedBonuses,\n            isHome: true\n        },\n        {\n            id: awayTeamID,\n            tds: awayTDs,\n            painted: awayPainted,\n            underdog: awayUnderdog,\n            casualties: awayCasualties,\n            passes: awayPasses,\n            result: awayResult,\n            basePoints: awayBasePoints,\n            leaguePoints: awayLeaguePoints,\n            bonusesApplied: awayBonusData.appliedBonuses,\n            isHome: false\n        }\n        ],\n    }\n};\n\nconst addMatch = (match) => matches.push(match);\n\nconst removeMatchByID = (id) => {\n    matches.forEach((match, i) => {\n        if(id === match.id) {\n        matches.splice(i, 1);\n        }\n    });\n};\n\nconst setMatchByID = (id, updatedMatch) => {\n  const index = matches.findIndex(m => m.id === id);\n  if (index !== -1) {\n    matches[index] = updatedMatch;\n  } else {\n    console.warn(`setMatchByID: No match found with id ${id}`);\n  }\n};\n\n\nconst getMatchByID = (id) => matches.find(match => match.id === id);\n\nconst updateRecords = (teams) => {\n  const matches = getMatches();\n\n  // Reset all team stats\n  teams.forEach(team => {\n    team.wins = 0;\n    team.draws = 0;\n    team.losses = 0;\n    team.leaguePoints = 0;\n    team.totalTDs = 0;\n    team.totalCasualties = 0;\n    team.gamesPlayed = 0;\n  });\n\n  matches.forEach(match => {\n    match.teams.forEach(matchTeam => {\n      const team = teams.find(t => t.id === matchTeam.id);\n      if (!team) return;\n\n      team.leaguePoints += Number(matchTeam.leaguePoints);\n      team.totalTDs += Number(matchTeam.tds);\n      team.totalCasualties += Number(matchTeam.casualties);\n      team.gamesPlayed += 1;\n\n      if (matchTeam.result === 'win') {\n        team.wins += 1;\n      } else if (matchTeam.result === 'draw') {\n        team.draws += 1;\n      } else if (matchTeam.result === 'loss') {\n        team.losses += 1;\n      }\n    });\n  });\n};\n\nconst reapplyBonusesToAllMatches = () => {\n  const currentMatches = getMatches();\n\n  currentMatches.forEach((match) => {\n    const [home, away] = match.teams;\n\n    const updatedMatch = createMatch(\n      home.id,\n      away.id,\n      home.tds,\n      away.tds,\n      home.passes,\n      away.passes,\n      home.casualties,\n      away.casualties,\n      // Assume these were stored correctly before\n      home.painted,\n      away.painted,\n      home.underdog,\n      away.underdog,\n      match.date\n    );\n\n    // Preserve ID before replacing match data\n    updatedMatch.id = match.id;\n\n    setMatchByID(match.id, updatedMatch);\n  });\n};\n\nexport { getMatches, setMatches, createMatch, addMatch, removeMatchByID, getMatchByID, setMatchByID, updateRecords, reapplyBonusesToAllMatches };\n","import * as teams from './teams.js';\nimport * as storage from './storage.js';\nimport * as bonuses from './bonuses.js';\nimport * as matches from './matches.js';\n\nlet teamsTable = document.querySelector('#teams tbody');\n\nconst displayTeams = (teamsList) => {\n    // Clear current display\n    while(teamsTable.firstChild){\n        teamsTable.removeChild(teamsTable.firstChild);\n    };\n\n    // Populate display \n    teamsList.forEach((team) => {\n        let tr = document.createElement('tr');\n        teamsTable.appendChild(tr);\n        tr.dataset.teamId = team.id;\n\n        let td1 = document.createElement('td');\n        tr.appendChild(td1);\n        td1.textContent = team.rank;\n\n        let td2 = document.createElement('td');\n        tr.appendChild(td2);\n        td2.textContent = team.name;\n\n        let td3 = document.createElement('td');\n        tr.appendChild(td3);\n        td3.textContent = team.record;\n\n        let td4 = document.createElement('td');\n        tr.appendChild(td4);\n        td4.textContent = team.leaguePoints;\n    })\n};\n\nlet matchesTable = document.querySelector('#matches tbody');\n\nconst displayMatches = (matchesList) => {\n    // Sort matches by date\n    matchesList.sort((a, b) => new Date(b.date) - new Date(a.date)); // Newest first\n\n    // Clear match display\n    while (matchesTable.firstChild) {\n        matchesTable.removeChild(matchesTable.firstChild);\n    }\n\n    // Populate match table\n    matchesList.forEach((match => {\n        const tr = document.createElement('tr');\n        matchesTable.appendChild(tr);\n        tr.dataset.matchId = match.id;\n\n        const homeTeam = match.teams.find(t => t.isHome);\n        const awayTeam = match.teams.find(t => !t.isHome);\n\n        const homeTeamName = teams.getTeamByID(homeTeam.id)?.name || 'Unknown';\n        const awayTeamName = teams.getTeamByID(awayTeam.id)?.name || 'Unknown';\n\n        const td1 = document.createElement('td');\n        td1.textContent = homeTeamName;\n        tr.appendChild(td1);\n\n        const td2 = document.createElement('td');\n        td2.textContent = `${homeTeam.tds}-${awayTeam.tds}`;\n        tr.appendChild(td2);\n\n        const td3 = document.createElement('td');\n        td3.textContent = awayTeamName;\n        tr.appendChild(td3);\n\n        const td4 = document.createElement('td');\n        td4.textContent = match.date || 'N/A';\n        tr.appendChild(td4);\n    }));\n};\n\n\nconst homeSelect = document.getElementById('home-select');\nconst awaySelect = document.getElementById('away-select');\n\nconst populateTeamSelects = (teamsList) => {\n\n    // Clear any previous options except the default\n    homeSelect.innerHTML = '<option value=\"\">-- Select Team --</option>';\n    awaySelect.innerHTML = '<option value=\"\">-- Select Team --</option>';\n\n    teamsList.forEach(team => {\n        const option = document.createElement('option');\n        option.value = team.id;\n        option.textContent = `${team.name} (${team.ticker})`;\n\n        // Clone for each dropdown so the option nodes aren't shared\n        homeSelect.appendChild(option.cloneNode(true));\n        awaySelect.appendChild(option.cloneNode(true));\n    });\n}\n\n// DOM references\nconst teamDialog = document.getElementById('team-details-dialog');\nconst matchDialog = document.getElementById('match-details-dialog');\nconst teamBody = document.getElementById('team-details-body');\nconst matchBody = document.getElementById('match-details-body');\n\nlet selectedTeamID = null;\nlet selectedMatchID = null;\n\n// === TEAM DETAILS ===\nconst showTeamDetails = (team) => {\n    if (!team) return;\n\n    selectedTeamID = team.id;\n\n    teamBody.innerHTML = '';\n\n    const teamStats = document.createElement('div');\n    teamStats.classList.add('team-stats');\n    teamBody.appendChild(teamStats);\n\n    teamStats.innerHTML = `\n        <p><strong>Name:</strong> ${team.name}</p>\n        <p><strong>Race:</strong> ${team.race}</p>\n        <p><strong>Coach:</strong> ${team.coach}</p>\n        <p><strong>Ticker:</strong> ${team.ticker}</p>\n        <p><strong>Record:</strong> ${team.wins}-${team.draws}-${team.losses}</p>\n        <p><strong>League Points:</strong> ${team.leaguePoints}</p>\n        <p><strong>Rank:</strong> ${team.rank}</p>\n        <p><strong>Total TDs:</strong> ${team.totalTDs}</p>\n        <p><strong>Total Casualties Caused:</strong> ${team.totalCasualties}</p>\n        <p><strong>Total Games Played:</strong> ${team.gamesPlayed}</p>\n        `;\n\n    document.getElementById('edit-team-btn').addEventListener('click', () => {\n        setEditingTeamID(team.id);\n  \n        document.querySelector('[name=\"name\"]').value = team.name;\n        document.querySelector('[name=\"race\"]').value = team.race;\n        document.querySelector('[name=\"coach\"]').value = team.coach;\n        document.querySelector('[name=\"ticker\"]').value = team.ticker;\n\n        document.querySelector('#add-team-btn').textContent = 'Apply Edits';\n        document.querySelector('#team-form-title').textContent = 'Edit Team';\n\n        teamDialog.close();\n        document.getElementById('team-dialog').showModal();\n    });\n    \n\n    // ==== Mini Match History ====\n    const teamMatches = matches.getMatches()\n      .filter(match => match.teams.some(t => t.id === team.id))\n      .sort((a, b) => new Date(b.date) - new Date(a.date)); // Newest first\n\n    const matchHistory = document.createElement('div');\n    matchHistory.classList.add('team-match-history');\n\n    const historyHeader = document.createElement('h4');\n    historyHeader.textContent = 'Match History';\n    matchHistory.appendChild(historyHeader);\n\n    if(teamMatches.length === 0) {\n        const row = document.createElement('div');\n        row.classList.add('mini-match-row');\n        row.innerHTML = `<span class=\"empty\">No Matches Yet</span>`;\n        matchHistory.appendChild(row);\n    }\n\n    teamMatches.forEach(match => {\n        const [home, away] = match.teams;\n        const isHome = home.id === team.id;\n        const self = isHome ? home : away;\n        const opponent = isHome ? away : home;\n\n        const opponentTicker = teams.getTeamByID(opponent.id)?.ticker || '???';\n        const result = self.result;\n        const score = isHome ? `${home.tds}-${away.tds}` : `${away.tds}-${home.tds}`;\n        const date = match.date;\n\n        const row = document.createElement('div');\n        row.classList.add('mini-match-row');\n        row.innerHTML = `\n            <span class=\"match-date\">${date}</span>\n            <span class=\"opponent-name\">${opponentTicker}</span>\n            <span class=\"score\">${score}</span>\n            <span class=\"result ${result}\">${capitalize(result)}</span>\n        `;\n\n        row.addEventListener('click', () => {\n            showMatchDetails(match, teams.getTeamByID(home.id), teams.getTeamByID(away.id));\n        });\n\n        matchHistory.appendChild(row);\n    });\n\n    teamBody.appendChild(matchHistory);\n\n    teamDialog.showModal();\n};\n\n\n// === MATCH DETAILS ===\nconst showMatchDetails = (match, homeTeam, awayTeam) => {\n    if (!match) return;\n\n    selectedMatchID = match.id;\n\n    const [home, away] = match.teams;\n\n    const formatBonuses = (bonuses) => {\n        if (!bonuses || bonuses.length === 0) return '<li>No bonuses earned.</li>';\n        return bonuses.map(b => `<li>${b}</li>`).join('');\n    };\n\n    matchBody.innerHTML = `\n        <div class=\"match-details-grid\">\n            <div class=\"match-team-block\">\n                <h4>${homeTeam?.name || 'Unknown'} <span class=\"label\">Home</span></h4>\n                <p><strong>TDs:</strong> ${home.tds}</p>\n                <p><strong>Casualties Caused:</strong> ${home.casualties}</p>\n                <p><strong>Passes:</strong> ${home.passes}</p>\n                <p><strong>Result:</strong> ${capitalize(home.result)} (+${home.basePoints} points)</p>\n                <p><strong>League Points:</strong> ${home.leaguePoints}</p>\n                <p><strong>Bonuses:</strong></p>\n                <ul>${formatBonuses(home.bonusesApplied)}</ul>\n            </div>\n\n            <div class=\"match-team-block\">\n                <h4>${awayTeam?.name || 'Unknown'} <span class=\"label\">Away</span></h4>\n                <p><strong>TDs:</strong> ${away.tds}</p>\n                <p><strong>Casualties Caused:</strong> ${away.casualties}</p>\n                <p><strong>Passes:</strong> ${away.passes}</p>\n                <p><strong>Result:</strong> ${capitalize(away.result)} (+${away.basePoints} points)</p>\n                <p><strong>League Points:</strong> ${away.leaguePoints}</p>\n                <p><strong>Bonuses:</strong></p>\n                <ul>${formatBonuses(away.bonusesApplied)}</ul>\n            </div>\n        </div>\n        <p style=\"text-align:center; margin-top:1rem;\"><strong>Date:</strong> ${match.date}</p>\n        `;\n\n    document.getElementById('edit-match-btn').addEventListener('click', () => {\n        editingMatchID = match.id;\n        setMatchFormMode(true);\n\n        const home = match.teams.find(t => t.isHome);\n        const away = match.teams.find(t => !t.isHome);\n\n        populateTeamSelects(teams.getTeams());\n\n        // Set form inputs\n        document.querySelector('#home-select').value = home.id;\n        document.querySelector('#away-select').value = away.id;\n        document.querySelector('[name=\"homeTDs\"]').value = home.tds;\n        document.querySelector('[name=\"awayTDs\"]').value = away.tds;\n        document.querySelector('[name=\"homePasses\"]').value = home.passes;\n        document.querySelector('[name=\"awayPasses\"]').value = away.passes;\n        document.querySelector('[name=\"homeCasualties\"]').value = home.casualties;\n        document.querySelector('[name=\"awayCasualties\"]').value = away.casualties;\n        document.querySelector('[name=\"homePainted\"]').checked = home.painted;\n        document.querySelector('[name=\"awayPainted\"]').checked = away.painted;\n        document.querySelector('[name=\"homeUnderdog\"]').checked = home.underdog;\n        document.querySelector('[name=\"awayUnderdog\"]').checked = away.underdog;\n        document.querySelector('[name=\"date\"]').value = match.date;\n\n        matchDialog.close(); // Close details\n        document.getElementById('match-dialog').showModal(); // Open edit form\n    });\n\n    matchDialog.showModal();\n}\n\nconst inputs = document.querySelectorAll('input');\nconst numInputs = document.querySelectorAll('input[type=\"number\"]');\nconst selects = document.querySelectorAll('select');\nconst checks = document.querySelectorAll('input[type=\"checkbox\"]');\nconst clearInputs = () => {\n    inputs.forEach((input) => {\n        input.value = '';\n    });\n    numInputs.forEach((input) => {\n        input.value = 0;\n    });\n    selects.forEach((select) => {\n        select.selectedIndex = 0;\n    });\n    checks.forEach((check) => {\n        check.checked = false;\n    });\n}\n\nconst renderBonusToggles = () => {\n  const container = document.getElementById('bonus-toggle-form');\n  container.innerHTML = ''; // Clear previous\n\n  bonuses.getBonuses().forEach(bonus => {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('bonus-toggle-label');\n\n    // Top row: checkbox + name\n    const topRow = document.createElement('div');\n    topRow.classList.add('bonus-toggle-top');\n\n    const checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.name = 'bonusToggle';\n    checkbox.value = bonus.id;\n    checkbox.checked = bonus.active ?? true;\n\n    checkbox.addEventListener('change', (e) => {\n      bonus.active = e.target.checked;\n      storage.save('bonuses', bonuses.getBonuses());\n\n      matches.reapplyBonusesToAllMatches();\n\n      matches.updateRecords(teams.getTeams());\n      teams.assignRanks();\n\n      displayMatches(matches.getMatches());\n      displayTeams(teams.getTeams());\n    });\n\n    const nameSpan = document.createElement('span');\n    nameSpan.textContent = bonus.name;\n\n    topRow.appendChild(checkbox);\n    topRow.appendChild(nameSpan);\n\n    // Detail dropdown\n    const detail = document.createElement('div');\n    detail.classList.add('bonus-detail');\n    detail.textContent = bonus.description;\n\n    // Clicking anywhere on label (except checkbox) toggles dropdown\n    wrapper.addEventListener('click', (e) => {\n      if (e.target !== checkbox) {\n        detail.classList.toggle('show');\n      }\n    });\n\n    wrapper.appendChild(topRow);\n    wrapper.appendChild(detail);\n    container.appendChild(wrapper);\n  });\n};\n\nconst capitalize = (word) => word.charAt(0).toUpperCase() + word.slice(1);\n\nlet editingMatchID = null;\nconst getEditingMatchID = () => editingMatchID;\nconst setEditingMatchID = (id) => editingMatchID = id;\n\nlet editingTeamID = null;\nconst getEditingTeamID = () => editingTeamID;\nconst setEditingTeamID = (id) => editingTeamID = id;\n\nconst matchDialogTitle = document.querySelector('#match-dialog-title');\nconst matchSubmitButton = document.querySelector('#add-match-btn');\n\nexport const setMatchFormMode = (isEditing) => {\n  if (isEditing) {\n    matchDialogTitle.textContent = 'Edit Match';\n    matchSubmitButton.textContent = 'Apply Edits';\n  } else {\n    matchDialogTitle.textContent = 'Add Match';\n    matchSubmitButton.textContent = 'Add Match';\n  }\n};\n\n\nexport { displayTeams, displayMatches, populateTeamSelects, showTeamDetails, showMatchDetails, selectedTeamID, selectedMatchID, clearInputs, renderBonusToggles, getEditingMatchID, setEditingMatchID, getEditingTeamID, setEditingTeamID }\n","import './styles.css';\nimport * as teams from './teams.js';\nimport * as display from './display.js';\nimport * as bonuses from './bonuses.js';\nimport * as matches from './matches.js';\nimport * as storage from './storage.js';\n\n// === CURRENT LEAGUE BONUSES ===\nlet bonus1 = bonuses.createBonus(\n  'Fully Painted Team',\n  'painted',\n  '1 point awarded if your team is painted to the 3 color minimum.',\n  1,\n  1\n);\n\nlet bonus2 = bonuses.createBonus(\n  'Vulgar Display of Power',\n  'casualties',\n  '3 points (awarded if a team causes at least 3 casualties in a match)',\n  3,\n  3\n);\n\nlet bonus3 = bonuses.createBonus(\n  'Aerial Domination',\n  'passes',\n  '3 points (for completing 3 successful passes in a match)',\n  3,\n  3\n);\n\nlet bonus4 = bonuses.createBonus(\n  'Clean Sheet',\n  'opponent TDs',\n  '3 points (for holding opponents to zero touchdowns)',\n  0,\n  3\n);\n\nlet bonus5 = bonuses.createBonus(\n  \"It's Not the Size of the Dog...\",\n  'underdog',\n  '3 points (for forcing a tie or win with a team value deficit of 150k or more)',\n  1,\n  3\n);\n\n\n// === DOMContentLoaded: Load Data & Initial Display ===\ndocument.addEventListener('DOMContentLoaded', () => {\n  storage.loadAll(teams, matches, bonuses);\n\n  if (bonuses.getBonuses().length === 0) {\n    bonuses.addBonus(bonus1);\n    bonuses.addBonus(bonus2);\n    bonuses.addBonus(bonus3);\n    bonuses.addBonus(bonus4);\n    bonuses.addBonus(bonus5);\n  }\n  display.renderBonusToggles();\n\n  matches.updateRecords(teams.getTeams());\n  teams.assignRanks();\n  display.clearInputs();\n  display.displayTeams(teams.getTeams());\n  display.displayMatches(matches.getMatches());\n});\n\n// === TEAM EVENT LISTENERS ===\nconst teamDialog = document.getElementById('team-dialog');\nconst newTeamNameInput = document.querySelector('#team-form #name-input');\nconst newTeamTickerInput = document.querySelector('#team-form #ticker-input');\n\ndocument.getElementById('new-team-btn').onclick = () => {\n    display.clearInputs();\n    teamDialog.showModal();\n};\ndocument.getElementById('cancel-team-btn').onclick = () => teamDialog.close();\n\nnewTeamNameInput.addEventListener('input', () => {\n  const words = newTeamNameInput.value.trim().split(/[\\s\\-_:']+/);\n  const initials = words.map(w => w[0]?.toUpperCase() || '').join('');\n  newTeamTickerInput.value = initials.slice(0, 3);\n});\n\n\ndocument.querySelector('#add-team-btn').addEventListener('click', (e) => {\n  e.preventDefault();\n  const name = newTeamNameInput.value;\n  const ticker = newTeamTickerInput.value;\n  const race = document.querySelector('#team-form #race-input').value;\n  const coach = document.querySelector('#team-form #coach-input').value;\n  const editingTeamID = display.getEditingTeamID();\n\n  const newTeam = editingTeamID\n  ? teams.createTeam(name, race, coach, ticker, editingTeamID)\n  : teams.createTeam(name, race, coach, ticker);\n\n\n  if (editingTeamID) {\n    teams.setTeamByID(editingTeamID, newTeam);\n    display.setEditingTeamID(null);\n  } else {\n    teams.addTeam(newTeam);\n  }\n\n  document.querySelector('#add-team-btn').textContent = 'Add Team';\n  document.querySelector('#team-form-title').textContent = 'New Team';\n  matches.updateRecords(teams.getTeams());\n  teams.assignRanks();\n  storage.saveAll(teams, matches, bonuses);\n  display.displayTeams(teams.getTeams());\n  display.clearInputs();\n  teamDialog.close();\n});\n\n// === MATCH EVENT LISTENERS ===\nconst matchDialog = document.getElementById('match-dialog');\n\ndocument.getElementById('new-match-btn').onclick = () => {\n  display.populateTeamSelects(teams.getTeams());\n  display.clearInputs();\n  // Set form to new mode (instead of edit)\n  display.setEditingMatchID(null);\n  display.setMatchFormMode(false);\n  matchDialog.showModal();\n};\n\ndocument.getElementById('cancel-match-btn').onclick = () => {\n  display.setEditingMatchID(null);\n  matchDialog.close();\n};\n\ndocument.querySelector('#add-match-btn').addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const homeID = document.querySelector('#home-select').value;\n  const awayID = document.querySelector('#away-select').value;\n\n  if (homeID === awayID) {\n    alert(\"A team cannot play against itself.\");\n    return;\n  }\n\n  const getInputVal = name => {\n    const el = document.querySelector(`[name=\"${name}\"]`);\n    return el.type === 'checkbox' ? el.checked : el.value;\n  };\n\n  const editingMatchID = display.getEditingMatchID();\n\n  const newMatch = matches.createMatch(\n    homeID, awayID,\n    getInputVal('homeTDs'), getInputVal('awayTDs'),\n    getInputVal('homePasses'), getInputVal('awayPasses'),\n    getInputVal('homeCasualties'), getInputVal('awayCasualties'),\n    getInputVal('homePainted'), getInputVal('awayPainted'),\n    getInputVal('homeUnderdog'), getInputVal('awayUnderdog'),\n    getInputVal('date'),\n    editingMatchID || null\n  );\n\n  if (editingMatchID) {\n    matches.setMatchByID(editingMatchID, newMatch);\n    display.setEditingMatchID(null);\n  } else {\n    matches.addMatch(newMatch);\n  }\n\n  matches.updateRecords(teams.getTeams());\n  teams.assignRanks();\n  storage.saveAll(teams, matches, bonuses);\n  display.displayTeams(teams.getTeams());\n  display.displayMatches(matches.getMatches());\n\n  matchDialog.close();\n});\n\n// === DETAILS EVENT LISTENERS ===\ndocument.querySelector('#teams tbody').addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n  if (row?.dataset.teamId) {\n    const team = teams.getTeamByID(row.dataset.teamId); // this line was missing\n    if (team) {\n      display.showTeamDetails(team);\n    }\n  }\n});\n\ndocument.querySelector('#matches tbody').addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n  if (row?.dataset.matchId) {\n    const match = matches.getMatches().find(m => m.id === row.dataset.matchId);\n    if (match) {\n      const home = match.teams.find(t => t.isHome);\n      const away = match.teams.find(t => !t.isHome);\n      const homeTeam = teams.getTeamByID(home.id);\n      const awayTeam = teams.getTeamByID(away.id);\n      display.showMatchDetails(match, homeTeam, awayTeam);\n    }\n  }\n});\n\n// === DELETE EVENT LISTENERS ===\ndocument.getElementById('delete-team-btn').addEventListener('click', () => {\n  teams.removeTeamByID(display.selectedTeamID);\n  teams.assignRanks();\n  storage.saveAll(teams, matches, bonuses);\n  display.displayTeams(teams.getTeams());\n  display.displayMatches(matches.getMatches());\n  document.getElementById('team-details-dialog').close();\n});\n\ndocument.getElementById('delete-match-btn').addEventListener('click', () => {\n  matches.removeMatchByID(display.selectedMatchID);\n  matches.updateRecords(teams.getTeams());\n  teams.assignRanks();\n  storage.saveAll(teams, matches, bonuses);\n  display.displayMatches(matches.getMatches());\n  display.displayTeams(teams.getTeams());\n  document.getElementById('match-details-dialog').close();\n});\n\n// === IMPORT/EXPORT SECTION ===\nconst jsonInput = document.getElementById('json-input');\nconst exportBtn = document.getElementById('export-json');\nconst importBtn = document.getElementById('import-json');\n\nexportBtn.addEventListener('click', () => {\n  const exportData = {\n    version: 1,\n    teams: teams.getTeams(),\n    matches: matches.getMatches(),\n    bonuses: bonuses.getBonuses()\n  };\n\n  const json = JSON.stringify(exportData);\n  navigator.clipboard.writeText(json).then(() => {\n    alert('League data copied to clipboard!');\n  }).catch(err => {\n    alert('Failed to copy JSON to clipboard');\n    console.error(err);\n  });\n});\n\nimportBtn.addEventListener('click', async () => {\n  let jsonText = jsonInput.value.trim();\n\n  // If the input is empty, try to get JSON from the clipboard\n  if (!jsonText) {\n    try {\n      jsonText = await navigator.clipboard.readText();\n      if (!jsonText.trim()) return alert('Clipboard is empty or invalid.');\n    } catch (err) {\n      return alert('Could not read from clipboard.');\n    }\n  }\n\n  try {\n    const parsed = JSON.parse(jsonText);\n    console.log(parsed);\n\n    // Ensure correct structure\n    if (\n      !parsed ||\n      !Array.isArray(parsed.teams) ||\n      !Array.isArray(parsed.matches) ||\n      !Array.isArray(parsed.bonuses)\n    ) {\n      return alert('Invalid JSON structure: expected { teams, matches, bonuses }');\n    }\n\n    // Save to modules\n    teams.setTeams(parsed.teams);\n    matches.setMatches(parsed.matches);\n    bonuses.setBonuses(parsed.bonuses);\n\n    // Persist to localStorage\n    storage.save('teams', parsed.teams);\n    storage.save('matches', parsed.matches);\n    storage.save('bonuses', parsed.bonuses);\n\n    console.log('Working here?');\n    // Update state\n    matches.updateRecords(teams.getTeams());\n    teams.assignRanks();\n\n    console.log('Working here?');\n    // Re-render UI\n    display.displayTeams(teams.getTeams());\n    display.displayMatches(matches.getMatches());\n    console.log('Working here?');\n\n    alert('League data successfully imported!');\n  } catch (err) {\n    console.error(err);\n    alert('Error importing data. Please make sure it’s valid JSON.');\n  }\n});\n\n\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","teams","getTeams","setTeams","array","createTeam","name","race","coach","ticker","id","crypto","randomUUID","wins","draws","losses","leaguePoints","rank","totalTDs","totalCasualties","gamesPlayed","record","this","rehydrateTeams","plainArray","map","data","team","addTeam","push","getTeamByTicker","find","getTeamByID","setTeamByID","updatedTeam","index","findIndex","t","console","warn","removeTeamByID","forEach","i","splice","assignRanks","orderedTeams","Array","from","length","leaguePointsMax","leaguePointsMaxIndex","j","temp","save","localStorage","setItem","JSON","stringify","load","getItem","parse","saveAll","teamsModule","matchesModule","bonusesModule","getMatches","getBonuses","bonuses","setBonuses","createBonus","type","description","count","points","addBonus","bonus","removeBonusByID","applyBonuses","result","oppTDs","casualties","passes","painted","underdog","appliedBonuses","active","appliesAuto","appliesManual","matches","setMatches","createMatch","homeTeamID","awayTeamID","homeTDs","awayTDs","homePasses","awayPasses","homeCasualties","awayCasualties","homePainted","awayPainted","homeUnderdog","awayUnderdog","date","existingID","matchID","homeResult","awayResult","homeBasePoints","awayBasePoints","homeBonusData","awayBonusData","homeBonusPoints","awayLeaguePoints","tds","basePoints","bonusesApplied","isHome","addMatch","match","removeMatchByID","setMatchByID","updatedMatch","m","getMatchByID","updateRecords","matchTeam","Number","reapplyBonusesToAllMatches","home","away","teamsTable","document","querySelector","displayTeams","teamsList","firstChild","removeChild","tr","createElement","appendChild","dataset","teamId","td1","textContent","td2","td3","td4","matchesTable","displayMatches","matchesList","sort","a","b","Date","matchId","homeTeam","awayTeam","homeTeamName","awayTeamName","homeSelect","getElementById","awaySelect","populateTeamSelects","innerHTML","option","cloneNode","teamDialog","matchDialog","teamBody","matchBody","selectedTeamID","selectedMatchID","showMatchDetails","formatBonuses","join","capitalize","addEventListener","editingMatchID","setMatchFormMode","checked","close","showModal","inputs","querySelectorAll","numInputs","selects","checks","clearInputs","input","select","selectedIndex","check","word","charAt","toUpperCase","slice","getEditingMatchID","setEditingMatchID","editingTeamID","getEditingTeamID","setEditingTeamID","matchDialogTitle","matchSubmitButton","isEditing","bonus1","bonus2","bonus3","bonus4","bonus5","rawTeams","savedMatches","savedBonuses","container","wrapper","classList","add","topRow","checkbox","e","target","nameSpan","detail","toggle","newTeamNameInput","newTeamTickerInput","onclick","initials","trim","split","w","preventDefault","newTeam","homeID","awayID","alert","getInputVal","el","newMatch","row","closest","teamStats","teamMatches","filter","some","matchHistory","historyHeader","self","opponent","opponentTicker","score","jsonInput","exportBtn","importBtn","exportData","version","json","navigator","clipboard","writeText","then","catch","err","error","async","jsonText","readText","parsed","log","isArray"],"sourceRoot":""}